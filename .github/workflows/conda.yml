name: Conda Build

on:
  push:
    branches: [ feature/ci-workflow, main ]
    tags:
      - "*"
  workflow_dispatch:
    inputs:
      version:
        description: 'Package version'
        required: false
        default: '0.0.1'
      build:
        description: 'Build number'
        required: false
        default: '1'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [ '3.10' ]
        cuda_compiler_version: [ '12.0' ]
    env:
      QUETZ_API_KEY: ${{ secrets.QUETZ_API_KEY }}
      QUETZ_SERVER_URL: ${{ vars.QUETZ_SERVER_URL }}
      CONDA_CHANNEL: baymax
      VERSION: ${{ github.event.inputs.version }}
      BUILD: ${{ github.event.inputs.build }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Miniconda and Mamba
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: ${{ matrix.python }}
          mamba-version: "*"
          channels: conda-forge
          mamba: true
          auto-update-conda: true
      
      - name: Install dependencies
        run: |
          mamba install -y boa quetz-client -c conda-forge

      - name: Build conda package
        run: |
          export CONDA_REPODATA_USE_ZST=false
          COMMIT=$(git rev-parse --short HEAD)
          FULL_VERSION="${VERSION}+${COMMIT}"
          conda mambabuild -c http://quetz.dp.tech:8088/get/baymax \
            -c conda-forge \
            --variants "{python: ['${{ matrix.python }}'], cuda_compiler_version: ['${{ matrix.cuda_compiler_version }}'], version: ['${FULL_VERSION}'], build: ['${{ env.BUILD }}']}" \
            --no-anaconda-upload \
            --output-folder conda-build \
            conda-recipe

      - name: Upload conda package
        run: |
          UNIDOCK_PACKAGE=$(find conda-build/ -type f -name 'unidock2-*.tar.bz2')
          quetz-client post_file_to_channel $CONDA_CHANNEL ${UNIDOCK_PACKAGE}
